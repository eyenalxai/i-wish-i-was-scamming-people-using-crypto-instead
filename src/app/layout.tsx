import "./globals.css"
import { Providers } from "@/components/providers"
import { cn } from "@/lib/utils"
import { GeistMono } from "geist/font/mono"
import { GeistSans } from "geist/font/sans"
import type { Metadata, Viewport } from "next"
import type { ReactNode } from "react"

const TITLE = "Create Next App"
const DESCRIPTION = "Generated by create next app"

export const metadata: Metadata = {
	title: TITLE,
	description: DESCRIPTION,
	openGraph: {
		title: TITLE,
		description: DESCRIPTION,
		type: "website"
	}
}

export const viewport: Viewport = {
	width: "device-width",
	initialScale: 1,
	maximumScale: 1,
	userScalable: false,
	themeColor: [
		{ media: "(prefers-color-scheme: light)", color: "0 0% 100%" },
		{ media: "(prefers-color-scheme: dark)", color: "222.2 84% 4.9%" }
	]
}

export default function RootLayout({ children }: { children: ReactNode }) {
	return (
		<html lang="en" suppressHydrationWarning>
			<body
				className={cn(
					"font-sans",
					"antialiased",
					GeistSans.variable,
					GeistMono.variable,
					"pt-[calc(var(--tg-viewport-safe-area-inset-top,0px)+var(--tg-viewport-content-safe-area-inset-top))]",
					"pb-[calc(var(--tg-viewport-safe-area-inset-bottom,0px)+var(--tg-viewport-content-safe-area-inset-bottom))]",
					"pl-[calc(var(--tg-viewport-safe-area-inset-left,0px)+var(--tg-viewport-content-safe-area-inset-left))]",
					"pr-[calc(var(--tg-viewport-safe-area-inset-right,0px)+var(--tg-viewport-content-safe-area-inset-right))]",
					"h-[var(--tg-viewport-stable-height)]",
					"w-[var(--tg-viewport-width)]",
					"overflow-hidden",
					"fixed",
					"border",
					"border-red-500"
				)}
			>
				<Providers>{children}</Providers>
			</body>
		</html>
	)
}
